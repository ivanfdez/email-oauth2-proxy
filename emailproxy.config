[Email OAuth 2.0 Proxy configuration file]
documentation = This is a sample Email OAuth 2.0 Proxy configuration file.
	Configure the proxy by adding items in the servers and accounts sections below. Examples are given for Gmail and
	Office 365 (though you will need to enter your own desktop app API client credentials in the accounts section).


[Server setup]
documentation = Local servers are specified as demonstrated below where, for example, the section heading [IMAP-1993]
	gives the type (which can be IMAP or SMTP) and the local port to listen on (i.e., 1993 etc). The local port number
	must be above 1023 (unless the proxy script is run via sudo), below 65536, and unique across local servers. Multiple
	accounts can share the same server. If the property 'local_address' is not specified, its value is assumed to be
	'localhost'. A secure connection to the remote server is assumed by default (i.e., implicit SSL/TLS). If your SMTP
	server uses the STARTTLS approach instead, add starttls = True, as shown in the example, and this will be handled by
	the proxy (assumed to be False otherwise). IMAP STARTTLS is not currently supported. In the standard configuration
	you should set up your email client to use an unencrypted connection for both SMTP and IMAP. Note that only the
	local channel between your email client and the proxy is unencrypted, so this is normally not a concern. However, if
	you prefer, you may provide a local_certificate_path (e.g., /etc/letsencrypt/live/mail.example.net/fullchain.pem)
	and local_key_path (e.g., /etc/letsencrypt/live/mail.example.net/privkey.pem) for a server, and the proxy will
	use these to set up a secure connection between itself and your email client.

[IMAP-1993]
local_address = localhost
server_address = outlook.office365.com
server_port = 993

[SMTP-1587]
server_address = smtp.office365.com
server_port = 587
starttls = True

[IMAP-1995]
server_address = imap.gmail.com
server_port = 993

[SMTP-1465]
server_address = smtp.gmail.com
server_port = 465


[Account setup]
documentation = Accounts are specified using your email address as the section heading (e.g., [your.email@gmail.com],
	below). Account usernames (i.e., email addresses) must be unique - only one entry per account is permitted. The
	examples given will work for Office 365 and Gmail, but you will need to add your own client_id and client_secret.
	See https://developers.google.com/identity/protocols/oauth2/native-app and the Microsoft link below for details.
	Multiple accounts on the same server can use the same client_id/client_secret; just duplicate these in each
	account. For Office 365 there is also an optional tenant identifier - if your configuration needs this parameter,
	place it in permission_url and token_url in place of 'common' in the example below. For more details about this,
	see the documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app.
	Office 365 shared mailboxes are also supported: add an account entry here using the email address of the shared
	mailbox as the account name, but when asked to authenticate, log in as the user that access has been delegated to.
	After the first time logging in to your account, the access token details will be cached in this configuration
	file, encrypted with the password you use in your email client. The password given in your email client is not used
	for authentication (which is done separately via a web browser), so can be different to your real account password.
	See the proxy's readme for more information: https://github.com/simonrob/email-oauth2-proxy/blob/main/README.md

[your.office365.address@example.com]
permission_url = https://login.microsoftonline.com/common/oauth2/v2.0/authorize
token_url = https://login.microsoftonline.com/common/oauth2/v2.0/token
oauth2_scope = https://outlook.office365.com/IMAP.AccessAsUser.All https://outlook.office365.com/SMTP.Send offline_access
redirect_uri = http://localhost
client_id = *** your client id here ***
client_secret = *** your client secret here ***

[your.email@gmail.com]
permission_url = https://accounts.google.com/o/oauth2/auth
token_url = https://oauth2.googleapis.com/token
oauth2_scope = https://mail.google.com/
redirect_uri = urn:ietf:wg:oauth:2.0:oob
client_id = *** your client id here ***
client_secret = *** your client secret here ***
